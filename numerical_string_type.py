# ===============================================================================
# 整数
# ===============================================================================
num_int = 1234  # int　Python3からlongと統合
num_oct = 0o777  # 8進数
num_hex = 0xffff  # 10進数
num_bin = 0b110000100  # 2進数

# ===============================================================================
# 浮動小数点
# ===============================================================================
num_float = 1.234  # 浮動小数点
num_float_e = 1.2e3  # 浮動小数点(指数表記) 1.2 * 10^3

# ===============================================================================
# 虚数
# ===============================================================================
num_complex = 3.14j  # complex

# ===============================================================================
# 論理値
# ===============================================================================
bool_true = True
bool_false = False


# ===============================================================================
# 文字列
# -------------------------------------------------------------------------------
# "..." の中では ' を、'...' の中では " を使うことができ
# "..." の中で " を、'...' の中で ' を使用するには、
# バックスラッシュ(\)を用いて引用符をエスケープ(無効化)
# ===============================================================================
str_double = "Hello world , 'Hello world'"
str_single = 'Hello world , "Hello world"'
str_backslash = "Hello world \" 'Hello world'"


# ===============================================================================
# 三重クォート """...""" や '''...''' は、複数行にまたがった文字列を記述することができ
# -------------------------------------------------------------------------------
# 三重クォートはしばしば、複数行のコメントとして利用されることがある
# ===============================================================================
str_triple = """A simple example module
This module is ...
"""

# ===============================================================================
# Unicode文字列とbyte文字列
# ===============================================================================
byte_string = b"\xe3\x81\x82"
utf8_string = byte_string.decode()  # バイト列から文字列に変換
print(utf8_string)

utf8_string = "あ"
byte_string = utf8_string.encode()  # 文字列からバイト列に変換
print(byte_string)


# ===============================================================================
# Shift_JIS/EUC/JISとの変換
# -------------------------------------------------------------------------------
# Unicode文字列からUTF8/SJIS/CP932/EUC/JISバイト列への変換
# ===============================================================================
utf8_str = "あ"
utf8_bytes = utf8_str.encode('utf-8')             # UTF-8バイト列: b'\xe3\x81\x82'
sjis_bytes = utf8_str.encode('sjis')              # Shift_JISバイト列: b'\x82\xa0'
cp932_bytes = utf8_str.encode('cp932')            # CP932バイト列: b'\x82\xa0'
eucjp_bytes = utf8_str.encode('euc_jp')           # EUC-JPバイト列: b'\xa4\xa2'
jis_bytes = utf8_str.encode('iso2022_jp')         # ISO-2022-JPバイト列: b'\x1b$B$"\x1b(B'


# ===============================================================================
# UTF8/SJIS/CP932/EUC/JISバイト列からUnicode文字列への変換
# ===============================================================================
utf8_str = utf8_bytes.decode('utf-8')             # あ
utf8_str = sjis_bytes.decode('sjis')              # あ
utf8_str = cp932_bytes.decode('cp932')            # あ
utf8_str = eucjp_bytes.decode('euc_jp')           # あ
utf8_str = jis_bytes.decode('iso2022_jp')         # あ


# ===============================================================================
# エスケープシーケンス
# -------------------------------------------------------------------------------
# \改行 : バックスラッシュと改行が無視される
# \\ : バックスラッシュ(\)
# \' : シングルクォート(')
# \" : ダブルクォート(")
# \a : ベル(BEL)
# \b : バックスペース(BS)
# \f : フォームフィード(FF)
# \n : 改行(LF)
# \r : 復帰(CR)
# \t : タブ(TAB)
# \v : 垂直タブ(VT)
# \nnn : 8進表記文字(nは0～7)
# \xnn : 16進表記文字(nは0～f)
# \uxxxx : ユニコード文字xxxx (例: u"\u3042")
# \U....xxxx : ユニコード文字xxxxxxxx (例: U"\U00003042")
# \N{name} : Unicodeデータベース文字 (例: u"\N{HIRAGANA LETTER A}")
# ===============================================================================


# ===============================================================================
# 文字列のフォーマット
# ===============================================================================
errmsg = "Can't open file"
errcode = 19042
msg = "ERROR: %s (%d)" % (errmsg, errcode)
print(msg)

print("%s" % "ABC")  # => ABC
print("%d" % 123)    # => 123
print("%f" % 1.23)   # => 1.23
print("%x" % 255)    # => ff
print("%o" % 255)    # => 377
print("%%%d" % 80)   # => %80

print("|%5s|" % 'ABC')     # => |  ABC| : 右寄せ5文字分
print("|%-5s|" % 'ABC')    # => |ABC  | : 左寄せ5文字分
print("|%5d|" % 123)       # => |  123| : 右寄せ5桁
print("|%-5d|" % 123)      # => |123  | : 左寄せ5桁
print("|%+5d|" % 123)      # => | +123| : ±符号付き
print("|%5.2f|" % 1.23)    # => | 1.23| : 全体桁数.少数点以下の桁数
print("|%05d|" % 123)      # => |00123| : 0埋め

